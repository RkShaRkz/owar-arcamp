
every 0$1 do
var temp;
begin
     temp = [];

     if not BurlakDestroyed and (BurlakCountdown - tick) > 0 then
        temp = temp ^ ['#Ar15-Russians',BurlakCountdown - tick];

     if ArtResearchCount > 0 then
        temp = temp ^ ['#Ar15-TechCount',ArtResearchCount];

     if ATech_SibPlant = 3 then
        temp = temp ^ ['#Ar15-plant',4];

     if ATech_Beh = 3 then
        temp = temp ^ ['#Ar15-beh',3];

     if ATech_TimeLapse = 3 then
        temp = temp ^ ['#Ar15-time',2];

     if ATech_Laser = 3 then
        temp = temp ^ ['#Ar15-laser',7];

     if ATech_SuperStim = 3 then
        temp = temp ^ ['#Ar15-stim',6];

     if ATech_SPBomb = 3 then
        temp = temp ^ ['#Ar15-bomb',5];

     display_strings = temp;

enable;
end;


every 5$0 do
begin
     Say(Heike, 'Ru_Heike_1');
     Say(Omar, 'Ru_Omar_1');
     Say(Heike, 'Ru_Heike_2');
end;

every 0$1 trigger tick + 0$10 > BurlakCountdown do
begin
     Say(Omar, 'Ru_Omar_2');
end;

every 0$1 trigger IsDying(Burlak) do
begin
     ForceSay(Burlak, 'Ru_Burlak');
end;

on ResearchComplete(res, un) do
begin
     if res = tech_sibcontam then
        ChangeMissionObjectives('Main_goals_intro3');
end;


every 0$1 trigger ContaminationDialogueOn = 0 do
begin                              //since this is a whole cutscene, prevent it from triggering during an attack or when some of player units are dying.
     if GetTech(tech_sibcontam, 2) = state_researched
        and ( (BurlakCountdown - tick) > 5$0 or BurlakDestroyed )
            and FilterAllUnits([ [f_side,2], [f_type,unit_building], [f_or, [f_btype,b_lab], [f_btype,b_lab_half], [f_btype,b_lab_full]] ]) > 0
                and FilterAllUnits([[f_side,2],[f_alive],[f_not,[f_ok]]]) = 0 then
                    ContaminationDialogueOn = 1;

enable;
end;

every 0$1 trigger ContaminationDialogueOn do
var temp,skill,i,j,dlg, temp2, lab, count;
var d_1,d_2,d_3,d_4,d_5,d_6;
begin
     Randomize;

     temp = unitfilter([Makise, Khattam, Sonya, Aviradze] diff 0, [f_placed]);

     if temp > 0 then
        HeadScientist = temp[rand(1,temp)]
     else
         begin
              temp = FilterAllUnits([ [f_side,2], [f_or, [f_class,class_soldier], [f_class,class_mortar], [f_class,class_engineer], [f_class,class_mechanic], [f_class,class_scientistic]] ]) diff [Heike,Omar,Gensher, Olaf,Oswald,Ralph,Sonya,Aviradze,Kowalski,Evelyn,Swansson,Dwayne,Khattam,Makise,Snake];

              if temp = [] then  //if there is no one to be the scientist just skip the whole dialoque. It's not essential anyway
              begin
                   cutscene_done = 1;
                   exit;
              end;

              skill = 0;

              for i in temp do
                  if GetSkill(i,skill_scientistic) > skill then
                  begin
                       skill = GetSkill(i,skill_scientistic);
                       HeadScientist = i;
                  end;
         end;

     dlg = 0;
     temp = ['Makise', 'Khattam', 'Sonya', 'Aviradze', 'SomeM', 'SomeF'];
     temp2 = [Makise, Khattam, Sonya, Aviradze];

     for i = 1 to temp2 do
         if HeadScientist = temp2[i] then
            dlg = temp[i];

     if dlg = 0 then
        if GetSex(HeadScientist) = sex_male then
           dlg = temp[5]
        else
            dlg = temp[6];


     temp = FilterAllUnits([[f_side,2],[f_nation,nation_arabian],[f_or, [f_btype,b_lab], [f_btype,b_lab_half], [f_btype,b_lab_full] ]]);
     temp2 = FilterAllUnits([[f_side,2],[f_nation,nation_arabian],[f_or,[f_btype,b_depot],[f_btype,b_warehouse],[f_btype,b_workshop],[f_btype,b_factory],[f_btype,b_armoury],[f_btype,b_barracks]]]);

     for i in temp do
         if GetLabKind(i,1) = b_lab_siberium or GetLabKind(i,2) = b_lab_siberium then
            lab = i;

     repeat
           wait(0$1);

           if lab = 0 then             //pick a siberium lab, or any lab, or any buliding. 
              if temp > 0 then
                 lab = temp[1]
              else
                  if temp2 > 0 then
                     lab = temp2[1];

     until lab > 0;

     d_1 = '_1';
     d_2 = '_2';
     d_3 = '_3';
     d_4 = '_4';
     d_5 = '_5';
     d_6 = '_6';


     wait(0$4);

     DeselectUnits(FilterAllUnits([f_side,2]));

     InGameOn;
     SetClass(HeadScientist, class_scientistic);

     Say(HeadScientist, 'C_' & dlg & d_1);

     temp = UnitsInside(lab) diff Heike ^ Omar ^ Gensher ^ headscientist;
     ComExitBuilding(temp);
     AddComMoveXY(temp,109,108);
     
     temp = FilterAllUnits([[f_or,[f_type,unit_human],[f_control,control_manual]],[f_not,[f_distxy,109,108,40]]]);
     for i in temp do
         ComMoveXY(j,109,108);

     CenterOnUnits(lab);
     temp = 0;

     count = 0$20;
     
     while temp = 0 and count > 0 do
     begin
          wait(0$1);
          count = count - 0$1;

          for i in [HeadScientist, Heike, Omar, Gensher] do
              if not IsInUnit(i) = lab then
                 case GetType( IsInUnit(i) ) of
                      unit_building: ComExitBuilding(i);
                      unit_vehicle: ComExitVehicle(i);
                      else         ComEnterUnit(i,lab);
                 end;

          if IsInUnit(HeadScientist) and IsInUnit(Heike) and IsInUnit(Omar) and ( IsInUnit(Gensher) or not IsPlaced(Gensher) ) then
             temp = 1;
     end;
                            
     Say(HeadScientist, 'C_' & dlg & d_2);
     Say(Omar, 'C_Omar_1');
                                   
     Say(HeadScientist, 'C_' & dlg & d_3);
     Say(Omar, 'C_Omar_2');
     Say(HeadScientist, 'C_' & dlg & d_4);
     Say(Heike, 'C_Heike_1');
     Say(HeadScientist, 'C_' & dlg & d_5);
     Say(Omar, 'C_Omar_3');
     Say(Heike, 'C_Heike_2');
     Say(Omar, 'C_Omar_4');

     Say(Omar, 'C_Omar_5');
     Say(Heike, 'C_Heike_3');
     Say(Omar, 'C_Omar_6');

     PreparePeople;
     PrepareHexes(lab);
     temp = ContaminationCutsceneHexes[2];

     ComMoveXY(Heike, temp[1], temp[2]);
     AddComTurnXY(Heike, ContaminationCutsceneHexes[3][3][1], ContaminationCutsceneHexes[3][3][2]);

     Say(Heike, 'C_Heike_4');

     temp = ContaminationCutsceneHexes[1];
     ComExitBuilding([Omar,Gensher,headscientist]);
     AddComMoveXY(Omar, temp[1][1], temp[1][2]);
     AddComMoveXY(Gensher, temp[2][1], temp[2][2]);
     AddComMoveXY(headscientist, temp[3][1], temp[3][2]);
     AddComTurnUnit([Omar, Gensher, headscientist], Heike);


     temp = ContaminationCutsceneHexes[3];
     temp2 = ContaminationCutsceneSoldiers diff headscientist;


     count = 0$30;

     repeat
           wait(0$1);
           count = count - 0$1;

           CenterOnUnits(Heike);

           j = 0;

           for i = 1 to temp2 do
               if GetDistUnitXY(temp2[i], temp[i][1], temp[i][2]) > 2 then
               begin
                    j = 1;

                    if IsInUnit(temp2[i]) = 0 then
                       ComAgressiveMove(temp2[i], temp[i][1], temp[i][2])
                    else
                        if GetType( IsInUnit(temp2[i]) ) = unit_vehicle then
                           ComExitVehicle(temp2[i])
                        else
                            ComExitBuilding(temp2[i]);

                    AddComTurnUnit(temp2, Heike);
               end;

     until count <= 0 or j = 0;

     Say(Heike, 'C_Heike_5');
     Say(Heike, 'C_Heike_6');
     Say(Heike, 'C_Heike_7');
     Say(Heike, 'C_Heike_8');
     Say(Heike, 'C_Heike_9');

     ComHold(temp2);
     wait(0$2);

     temp = [Olaf, Oswald, Ralph, Kowalski, Evelyn, Swansson, Dwayne];
     temp2 = ['Olaf', 'Oswald', 'Ralph', 'Kowalski', 'Evelyn', 'Swansson', 'Dwayne'];

     for i = temp downto 1 do
         if temp[i] = HeadScientist or not IsPlaced(temp[i]) then
         begin
              temp = delete(temp,i);
              temp2 = delete(temp2,i);
         end;  

     for i = 1 to 2 do
     begin
          j = rand(1,temp);

          //async;
          Say(temp[j], 'CR1_' & temp2[j]);
          //sync;
          temp = delete(temp,j);
          temp2 = delete(temp2,j);

          //wait(0$2*(0.3*game_speed));
     end;                              

     wait(0$4);

     temp = [Olaf, Oswald, Ralph, Kowalski, Evelyn, Swansson, Dwayne, Sonya, Aviradze, Khattam, Makise, Snake];
     temp2 = ['Olaf', 'Oswald', 'Ralph', 'Kowalski', 'Evelyn', 'Swansson', 'Dwayne', 'Sonya', 'Aviradze', 'Khattam', 'Makise', 'Snake'];

     for i = temp downto 1 do
         if temp[i] = HeadScientist or not IsPlaced(temp[i]) then
         begin
              temp = delete(temp,i);
              temp2 = delete(temp2,i);
         end; 


     for i = 1 to 4 do
     begin
          j = rand(1,temp);

          //async;
          Say(temp[j], 'CR2_' & temp2[j]);
          //sync;
          temp = delete(temp,j);
          temp2 = delete(temp2,j);

          //wait(0$1*(0.3*game_speed));
     end;

     temp = [Gensher, Oswald, Swansson, Dwayne, Ralph, Kowalski];
     temp2 = ['Gensher', 'Oswald', 'Swansson', 'Dwayne', 'Ralph', 'Kowalski'];
     j = [GensherIsLeader, OswaldIsLeader, SwanssonIsLeader, DwayneIsLeader, RalphIsLeader,  KowalskiIsLeader];

     for i = 1 to j do
         if j[i] = 1 then
            SayRadio(temp[i], 'CR3_' & temp2[i]);

     ComTurnUnit(Heike,Omar);
     Say(Heike, 'C_Heike_10');

     Say(HeadScientist, 'C_' & dlg & d_6);
     Say(Heike, 'C_Heike_11');



     if ([ATech_SibPlant, ATech_Beh, ATech_TimeLapse, ATech_Laser, ATech_SuperStim, ATech_SPBomb] diff 0) > 0 then
     begin
          wait(0$2);
          Say(Omar, 'C_Omar_7');
          Say(Omar, 'C_Omar_8');
          Say(Omar, 'C_Omar_9');
          Say(Omar, 'C_Omar_10');
          Say(Omar, 'C_Omar_11');
    

          InGameOff;

          wait(0$0.5);
          ChangeMissionObjectives('arttech1');

          SetTech(tech_artifact,2,state_enabled);

     end
     else
         InGameOff;

     ComFree(FilterAllUnits([[f_side,2],[f_type,unit_human]]));

     cutscene_done = 1;
     ContaminationDialogueOn = 0;
end;

every 0$1 trigger cutscene_done and BurlakDestroyed do
begin
     Query('attack_info');
     EnableMovingToNextMap = 1;
     SetAreaMapShow(ExitArea,1);

     wait(0$0.2);

     case difficulty of
          1: Query('sci_min_easy');
          2: Query('sci_min_medium');
          3: Query('sci_min_hard');
     end;
end;

Function PrepareHexes(lab);
var i, temp;
begin
     //ContaminationCutsceneHexes = [ [hexes for Omar, Gensher, hedscientist respectively],    [hex for heike],     [list of hexes for soldiers]  ];

     case GetDir(lab) of

     0: begin
     //dir 0
     ContaminationCutsceneHexes = [ [[GetX(lab)-1,GetY(lab)-4],[GetX(lab)+1,GetY(lab)-3],[GetX(lab)-2,GetY(lab)-4]],
     [GetX(lab)+0,GetY(lab)-6],
     [[GetX(lab)+4,GetY(lab)-7],[GetX(lab)+2,GetY(lab)-8],[GetX(lab)+0,GetY(lab)-9],[GetX(lab)-2,GetY(lab)-10],[GetX(lab)-4,GetY(lab)-11],
     [GetX(lab)+5,GetY(lab)-8],[GetX(lab)+3,GetY(lab)-9],[GetX(lab)+1,GetY(lab)-10],[GetX(lab)-1,GetY(lab)-11],[GetX(lab)-3,GetY(lab)-12],[GetX(lab)-5,GetY(lab)-13],
     [GetX(lab)+4,GetY(lab)-10],[GetX(lab)+2,GetY(lab)-11],[GetX(lab)+0,GetY(lab)-12],[GetX(lab)-2,GetY(lab)-13],[GetX(lab)-4,GetY(lab)-14],
     [GetX(lab)+5,GetY(lab)-11],[GetX(lab)+3,GetY(lab)-12],[GetX(lab)+1,GetY(lab)-13],[GetX(lab)-1,GetY(lab)-14],[GetX(lab)-3,GetY(lab)-15],[GetX(lab)-5,GetY(lab)-16],
     [GetX(lab)+4,GetY(lab)-13],[GetX(lab)+2,GetY(lab)-14],[GetX(lab)+0,GetY(lab)-15],[GetX(lab)-2,GetY(lab)-16],[GetX(lab)-4,GetY(lab)-17] ]];
     end;

     1: begin
     //dir 1
     ContaminationCutsceneHexes = [ [[GetX(lab)+3,GetY(lab)-1],[GetX(lab)+4,GetY(lab)+1],[GetX(lab)+2,GetY(lab)-2]],       //hexes for Omar, Gensher, headscientist respectively
     [GetX(lab)+6,GetY(lab)+0],             //Heike hex
     [[GetX(lab)+11,GetY(lab)+4],[GetX(lab)+10,GetY(lab)+2],[GetX(lab)+9,GetY(lab)+0],[GetX(lab)+8,GetY(lab)-2],[GetX(lab)+7,GetY(lab)-4],
     [GetX(lab)+13,GetY(lab)+5],[GetX(lab)+12,GetY(lab)+3],[GetX(lab)+11,GetY(lab)+1],[GetX(lab)+10,GetY(lab)-1],[GetX(lab)+9,GetY(lab)-3],[GetX(lab)+8,GetY(lab)-5],
     [GetX(lab)+14,GetY(lab)+4],[GetX(lab)+13,GetY(lab)+2],[GetX(lab)+12,GetY(lab)+0],[GetX(lab)+11,GetY(lab)-2],[GetX(lab)+10,GetY(lab)-4],
     [GetX(lab)+16,GetY(lab)+5],[GetX(lab)+15,GetY(lab)+3],[GetX(lab)+14,GetY(lab)+1],[GetX(lab)+13,GetY(lab)-1],[GetX(lab)+12,GetY(lab)-3],[GetX(lab)+11,GetY(lab)-5],
     [GetX(lab)+17,GetY(lab)+4],[GetX(lab)+16,GetY(lab)+2],[GetX(lab)+15,GetY(lab)+0],[GetX(lab)+14,GetY(lab)-2],[GetX(lab)+13,GetY(lab)-4] ]];
     end;

     2: begin
     //dir 2
     ContaminationCutsceneHexes = [ [[GetX(lab)+4,GetY(lab)+3],[GetX(lab)+3,GetY(lab)+4],[GetX(lab)+4,GetY(lab)+2]],
     [GetX(lab)+6,GetY(lab)+6],
     [[GetX(lab)+7,GetY(lab)+11],[GetX(lab)+8,GetY(lab)+10],[GetX(lab)+9,GetY(lab)+9],[GetX(lab)+10,GetY(lab)+8],[GetX(lab)+11,GetY(lab)+7],
     [GetX(lab)+8,GetY(lab)+13],[GetX(lab)+9,GetY(lab)+12],[GetX(lab)+10,GetY(lab)+11],[GetX(lab)+11,GetY(lab)+10],[GetX(lab)+12,GetY(lab)+9],[GetX(lab)+13,GetY(lab)+8],
     [GetX(lab)+10,GetY(lab)+14],[GetX(lab)+11,GetY(lab)+13],[GetX(lab)+12,GetY(lab)+12],[GetX(lab)+13,GetY(lab)+11],[GetX(lab)+14,GetY(lab)+10],
     [GetX(lab)+11,GetY(lab)+16],[GetX(lab)+12,GetY(lab)+15],[GetX(lab)+13,GetY(lab)+14],[GetX(lab)+14,GetY(lab)+13],[GetX(lab)+15,GetY(lab)+12],[GetX(lab)+16,GetY(lab)+11],
     [GetX(lab)+13,GetY(lab)+17],[GetX(lab)+14,GetY(lab)+16],[GetX(lab)+15,GetY(lab)+15],[GetX(lab)+16,GetY(lab)+14],[GetX(lab)+17,GetY(lab)+13] ]];
     end;

     3: begin
     //dir 0
     ContaminationCutsceneHexes = [ [[GetX(lab)+1,GetY(lab)+4],[GetX(lab)-1,GetY(lab)+3],[GetX(lab)+2,GetY(lab)+4]],
     [GetX(lab)+0,GetY(lab)+6],
     [[GetX(lab)-4,GetY(lab)+7],[GetX(lab)-2,GetY(lab)+8],[GetX(lab)+0,GetY(lab)+9],[GetX(lab)+2,GetY(lab)+10],[GetX(lab)+4,GetY(lab)+11],
     [GetX(lab)-5,GetY(lab)+8],[GetX(lab)-3,GetY(lab)+9],[GetX(lab)-1,GetY(lab)+10],[GetX(lab)+1,GetY(lab)+11],[GetX(lab)+3,GetY(lab)+12],[GetX(lab)+5,GetY(lab)+13],
     [GetX(lab)-4,GetY(lab)+10],[GetX(lab)-2,GetY(lab)+11],[GetX(lab)+0,GetY(lab)+12],[GetX(lab)+2,GetY(lab)+13],[GetX(lab)+4,GetY(lab)+14],
     [GetX(lab)-5,GetY(lab)+11],[GetX(lab)-3,GetY(lab)+12],[GetX(lab)-1,GetY(lab)+13],[GetX(lab)+1,GetY(lab)+14],[GetX(lab)+3,GetY(lab)+15],[GetX(lab)+5,GetY(lab)+16],
     [GetX(lab)-4,GetY(lab)+13],[GetX(lab)-2,GetY(lab)+14],[GetX(lab)+0,GetY(lab)+15],[GetX(lab)+2,GetY(lab)+16],[GetX(lab)+4,GetY(lab)+17] ]];
     end;

     4: begin
     //dir 1
     ContaminationCutsceneHexes = [ [[GetX(lab)-3,GetY(lab)+1],[GetX(lab)-4,GetY(lab)-1],[GetX(lab)-2,GetY(lab)+2]],       //hexes for Omar, Gensher, headscientist respectively
     [GetX(lab)-6,GetY(lab)+0],             //Heike hex
     [[GetX(lab)-11,GetY(lab)-4],[GetX(lab)-10,GetY(lab)-2],[GetX(lab)-9,GetY(lab)+0],[GetX(lab)-8,GetY(lab)+2],[GetX(lab)-7,GetY(lab)+4],
     [GetX(lab)-13,GetY(lab)-5],[GetX(lab)-12,GetY(lab)-3],[GetX(lab)-11,GetY(lab)-1],[GetX(lab)-10,GetY(lab)+1],[GetX(lab)-9,GetY(lab)+3],[GetX(lab)-8,GetY(lab)+5],
     [GetX(lab)-14,GetY(lab)-4],[GetX(lab)-13,GetY(lab)-2],[GetX(lab)-12,GetY(lab)+0],[GetX(lab)-11,GetY(lab)+2],[GetX(lab)-10,GetY(lab)+4],
     [GetX(lab)-16,GetY(lab)-5],[GetX(lab)-15,GetY(lab)-3],[GetX(lab)-14,GetY(lab)-1],[GetX(lab)-13,GetY(lab)+1],[GetX(lab)-12,GetY(lab)+3],[GetX(lab)-11,GetY(lab)+5],
     [GetX(lab)-17,GetY(lab)-4],[GetX(lab)-16,GetY(lab)-2],[GetX(lab)-15,GetY(lab)+0],[GetX(lab)-14,GetY(lab)+2],[GetX(lab)-13,GetY(lab)+4] ]];
     end;

     5: begin
     //dir 2
     ContaminationCutsceneHexes = [ [[GetX(lab)-4,GetY(lab)-3],[GetX(lab)-3,GetY(lab)-4],[GetX(lab)-4,GetY(lab)-2]],
     [GetX(lab)-6,GetY(lab)-6],
     [[GetX(lab)-7,GetY(lab)-11],[GetX(lab)-8,GetY(lab)-10],[GetX(lab)-9,GetY(lab)-9],[GetX(lab)-10,GetY(lab)-8],[GetX(lab)-11,GetY(lab)-7],
     [GetX(lab)-8,GetY(lab)-13],[GetX(lab)-9,GetY(lab)-12],[GetX(lab)-10,GetY(lab)-11],[GetX(lab)-11,GetY(lab)-10],[GetX(lab)-12,GetY(lab)-9],[GetX(lab)-13,GetY(lab)-8],
     [GetX(lab)-10,GetY(lab)-14],[GetX(lab)-11,GetY(lab)-13],[GetX(lab)-12,GetY(lab)-12],[GetX(lab)-13,GetY(lab)-11],[GetX(lab)-14,GetY(lab)-10],
     [GetX(lab)-11,GetY(lab)-16],[GetX(lab)-12,GetY(lab)-15],[GetX(lab)-13,GetY(lab)-14],[GetX(lab)-14,GetY(lab)-13],[GetX(lab)-15,GetY(lab)-12],[GetX(lab)-16,GetY(lab)-11],
     [GetX(lab)-13,GetY(lab)-17],[GetX(lab)-14,GetY(lab)-16],[GetX(lab)-15,GetY(lab)-15],[GetX(lab)-16,GetY(lab)-14],[GetX(lab)-17,GetY(lab)-13] ]];
     end;
      

     end;
     
     temp = ContaminationCutsceneHexes[1] ^ [ContaminationCutsceneHexes[2]] ^ ContaminationCutsceneHexes[3];

     for i in temp do
         if not ValidHex(i[1],i[2]) then
         begin
              ContaminationCutsceneHexes = [ [[99,96],[101,97],[98,96]],
              [100,94],
              [ [100,100-9],[100-2,100-10],[100+2,100-8],[100-4,100-11],[100+4,100-7],[100-6,100-12],[100+6,100-6],[100-8,100-13],[100+8,100-5],[100-10,100-14],[100+10,100-4],
              [100-1,100-11],[100-3,100-12],[100+1,100-10],[100-5,100-13],[100+5,100-8],[100-7,100-14],[100+7,100-7],[100-9,100-15],[100+9,100-6],
              [100+0,100-12],[100-2,100-13],[100+2,100-11],[100-4,100-14],[100+4,100-10],[100-6,100-15],[100+6,100-9],[100-8,100-16],[100+8,100-8],[100-10,100-17],[100+10,100-7],
              [100-1,100-14],[100-3,100-15],[100+1,100-13],[100+3,100-12],[100+3,100-9],[100-5,100-16],[100+5,100-11],[100-7,100-17],[100+7,100-10],[100-9,100-18],[100+9,100-9] ]];
         
              break;
         end;


end;

Function PreparePeople;
var i, temp_list;
begin
     Randomize;

     temp_list = FilterAllUnits([[f_side,2],[f_type,unit_human],[f_placed]]) diff headscientist ^ Heike ^ Omar ^ Gensher;
     ContaminationCutsceneSoldiers = [];

     for i in temp_list do
         if rand(1,2) = 1 then
            ContaminationCutsceneSoldiers = ContaminationCutsceneSoldiers ^ i
         else
             ContaminationCutsceneSoldiers = i ^ ContaminationCutsceneSoldiers;
end;

every 0$1 trigger GetTech(tech_artifact,2) = state_researched do
var i, temp, sci, dlg, _1, _2, d_SibPlant, d_Beh1, d_Beh2, d_TimeLapse,d_laser, d_SuperStim1, d_SuperStim2, d_SPBomb;
begin
     Randomize;

     temp = UnitFilter([Makise, Sonya, Khattam, Aviradze] diff 0, [[f_class,class_scientistic],[f_placed]]);

     if temp = 0 then
        temp = FilterAllUnits([[f_side,2],[f_class,class_scientistic],[f_placed]]) diff [Heike,Omar,Gensher, Olaf,Oswald,Ralph,Sonya,Aviradze,Kowalski,Evelyn,Swansson,Dwayne,Khattam,Makise,Snake];   //pick a scientist, if not then one of mains regardless of class, if not then anyone

     if temp = 0 then
        temp = Unitfilter([Makise, Sonya, Aviradze, Khattam] diff 0, [f_placed]);

     if temp = 0 then
        temp = FilterAllUnits([[f_side,2],[f_placed],[f_or,[f_class,class_soldier],[f_class,class_mortar],[f_class,class_mechanic],[f_class,class_engineer],[f_class,class_scientistic]]]) diff [Heike,Omar,Gensher, Olaf,Oswald,Ralph,Sonya,Aviradze,Kowalski,Evelyn,Swansson,Dwayne,Khattam,Makise,Snake];

     dlg = [];
     for i in temp do
         case i of
              Makise: dlg = dlg ^ 'Makise';
              Sonya: dlg = dlg ^ 'Sonya';
              Khattam: dlg = dlg ^ 'Khattam';
              Aviradze: dlg = dlg ^ 'Aviradze';
              else
                  if GetSex(sci) = sex_male then
                     dlg = dlg ^ 'SomeM'
                  else
                      dlg = dlg ^ 'SomeF';
         end;

     sci = rand(1,temp);

     _1 = '_1';
     _2 = '_2';
     d_SibPlant = '_SibPlant';
     d_Beh1 = '_Beh1';
     d_Beh2 = '_Beh2';
     d_TimeLapse = '_TimeLapse';
     d_laser  = '_Laser';
     d_SuperStim1 = '_SuperStim1';
     d_SuperStim2 = '_SuperStim2';
     d_SPBomb = '_SPBomb';

     wait(0$1);

     DialogueOn;

     Say(Heike, 'ArtTech_Heike_1');
     Say(temp[sci], 'ArtTech_' & dlg[sci] & _1);
     Say(Heike, 'ArtTech_Heike_2');
     Say(temp[sci], 'ArtTech_' & dlg[sci] & _2);

     ArtResearchList = [];

     if ATech_SibPlant then
     begin
          sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] &  d_SibPlant);
          ArtResearchList = ArtResearchList ^ 1;
     end;

     if ATech_Beh then
     begin
          sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_Beh1);
          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_Beh2);
          ArtResearchList = ArtResearchList ^ 2;
     end;

     if ATech_TimeLapse then
     begin
          sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_TimeLapse);
          ArtResearchList = ArtResearchList ^ 3;
     end;

     if ATech_Laser then
     begin
          if IsOk(Khattam) and IsPlaced(Khattam) then
          begin
               for i = 1 to temp do
                   if temp[i] = Khattam then
                      sci = i;
          end
          else
              sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_laser);
          ArtResearchList = ArtResearchList ^ 4;
     end;

     if ATech_SuperStim then
     begin
          sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_SuperStim1);
          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_SuperStim2);
          ArtResearchList = ArtResearchList ^ 5;
     end;

     if ATech_SPBomb then
     begin
          sci = rand(1,temp);

          Say(temp[sci], 'ArtTech_' & dlg[sci] & d_SPBomb);
          ArtResearchList = ArtResearchList ^ 6;
     end;

     ArtResearchList = ArtResearchList ^ 7;

     DWait(0$1);

     Query('art_tech_info');

     if [ATech_SibPlant, ATech_Beh, ATech_TimeLapse, ATech_Laser, ATech_SuperStim, ATech_SPBomb] diff 0 > 1 then
        ArtResearchCount = 2
     else
         ArtResearchCount = 1;

     DialogueOff;
end;
      
On ArtifactUnloaded(un, art) do
var temp, i;
begin
     if art = 5 then
        exit;

     temp = FilterAllUnits([ [f_side,2], [f_or,[f_btype,b_lab],[f_btype,b_lab_half],[f_btype,b_lab_full]] ]);
     SibLab = 0;

     for i in temp do
         if GetLabKind(i,1) = b_lab_siberium or GetLabKind(i,2) = b_lab_siberium then
            if GetDistUnits(un, i) < 7 then
               SibLab = i;

     if SibLab = 0 then
        exit;

     if GetTech(tech_artifact,2) = state_enabled then
        SetArtifactRes(2,true);

     if ArtResearchCount = 0 then
        exit;

     repeat
           wait(0$0.5);

           case SelectiveQuery('art_tech_choice', ArtResearchList) of
                1: if Query('art_tech_plant') = 1 then
                      PrepareResearch(1);
                2: if Query('art_tech_beh') = 1 then
                      PrepareResearch(2);

                3: case difficulty of
                        1: if Query('art_tech_time_easy') = 1 then
                              PrepareResearch(3);
                        2: if Query('art_tech_time_medium') = 1 then
                              PrepareResearch(3);
                        3: if Query('art_tech_time_hard') = 1 then
                              PrepareResearch(3);
                   end;

                4: case difficulty of
                        1: if Query('art_tech_laser_easy') = 1 then
                              PrepareResearch(4);
                        2: if Query('art_tech_laser_medium') = 1 then
                              PrepareResearch(4);
                        3: if Query('art_tech_laser_hard') = 1 then
                              PrepareResearch(4);
                   end;

                5: if Query('art_tech_stim') = 1 then
                      PrepareResearch(5);
                6: if Query('art_tech_bomb') = 1 then
                      PrepareResearch(6);
                7: break;
           end;

     until 2 in [ATech_SibPlant, ATech_Beh, ATech_TimeLapse, ATech_Laser, ATech_SuperStim, ATech_SPBomb];
end;
                 
On ArtifactLoaded(un, size) do
begin
     if not GetTech(tech_artifact,2) = state_researched then
        SetArtifactRes(2,false);

     PrepareResearch(0);
     ComCancel(SibLab);
end;

Function PrepareResearch(num);
var i, temp;
begin
     if ATech_SibPlant = 2 then
     begin
          ATech_SibPlant = 1;
          SetArtifactUse(2,art_use_power,art_no,0);
     end;
     if ATech_Beh = 2 then
     begin
          ATech_Beh = 1;
          SetArtifactUse(2,art_use_atom,art_no,0);
     end;
     if ATech_TimeLapse = 2 then
     begin
          ATech_TimeLapse = 1;
          SetArtifactUse(2,art_use_tau,art_no,0);
     end;
     if ATech_Laser = 2 then
     begin
          ATech_Laser = 1;
          SetArtifactUse(2,art_use_cube,art_no,0);
     end;
     if ATech_SuperStim = 2 then
     begin
          ATech_SuperStim = 1;
          SetArtifactUse(2,art_use_human,art_no,0);
     end;
     if ATech_SPBomb = 2 then
     begin
          ATech_SPBomb = 1;
          SetArtifactUse(2,art_use_sibexplosion,art_no,0);
     end;


     case num of
          1: begin
                  ATech_SibPlant = 2;
                  SetArtifactUse(2,art_use_power,art_instant,SibLab);
             end;
          2: begin
                  ATech_Beh = 2;
                  SetArtifactUse(2,art_use_atom,art_instant,SibLab);
             end;
          3: begin
                  ATech_TimeLapse = 2;
                  SetArtifactUse(2,art_use_tau,art_instant,SibLab);
             end;
          4: begin
                  ATech_Laser = 2;
                  SetArtifactUse(2,art_use_cube,art_instant,SibLab);
             end;
          5: begin
                  ATech_SuperStim = 2;
                  SetArtifactUse(2,art_use_human,art_instant,SibLab);
             end;
          6: begin
                  ATech_SPBomb = 2;
                  SetArtifactUse(2,art_use_sibexplosion,art_instant,SibLab);
             end;
     end;
end;


On EnterBuilding(building, human) do                                       //for switching Omar into desert warior
var temp, temp2, un, i;
begin
     if human = Omar and GetBType(building) in [b_depot, b_warehouse] then
        SetArtifactUse(2,art_use_hand,art_instant,building);

     if human = Omar and GetClass(Omar) = class_desert_warior then    //tigers are getting stuck if the unit they're tamed to enters building, so they are reset
     begin
          temp = FilterAllUnits([f_class,class_tiger]);

          for i in temp do
              if IsTamedBy(i) then
              begin
                   temp2 = [GetX(i), GetY(i), GetDir(i)];
                   DestroyUnit(i);
                   StrikeForce_tigers = StrikeForce_tigers - 1;

                   InitHc;
                   uc_side = 0;
                   uc_nation = nation_nature;
                   hc_agressivity = 0;
                   hc_class = class_tiger;
                   hc_attr = [16,11];
                   hc_skills = [5,5,5,5];
                   hc_gallery = 'nature_foreg';
                   hc_face_number = 3;

                   un = CreateHuman;
                   SetDir(un,temp2[3]);
                   PlaceUnitXY(un, temp2[1], temp2[2], false);
              end;
     end;
end;

On LeaveBuilding(building, human) do
begin
     if human = Omar and GetBType(building) in [b_depot, b_warehouse] then
        SetArtifactUse(2,art_use_hand,art_no,0);
end;


On ArtifactUsed(side,art_icon,p1,p2) do    
var i;
begin
     if art_icon = art_use_hand then
     begin
          if GetClass(Omar) = class_desert_warior then
             SetClass(Omar, class_engineer)
          else
              SetClass(Omar, class_desert_warior);

          exit;
     end;


     SetSpecResearch(SibLab,50,true);
     PrepareResearch(0);

     case art_icon of
          art_use_power: ATech_SibPlant = 2;
          art_use_atom: ATech_Beh = 2;
          art_use_tau: ATech_TimeLapse = 2;
          art_use_cube: ATech_Laser = 2;
          art_use_human: ATech_SuperStim = 2;
          art_use_sibexplosion: ATech_SPBomb = 2;
     end;
end;

On SpecResearchComplete(lab) do
begin
     if GetSide(lab) = 7 then
        exit;

     ArtTechDoneCount = ArtTechDoneCount + 1;

     if ATech_SibPlant = 2 then
     begin
          ATech_SibPlant = 3;
          ArtResearchList = ArtResearchList diff 1;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;
     if ATech_Beh = 2 then
     begin
          ATech_Beh = 3;                                             
          ArtResearchList = ArtResearchList diff 2;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;
     if ATech_TimeLapse = 2 then
     begin
          ATech_TimeLapse = 3;
          ArtResearchList = ArtResearchList diff 3;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;
     if ATech_Laser = 2 then
     begin
          ATech_Laser = 3;
          ArtResearchList = ArtResearchList diff 4;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;
     if ATech_SuperStim = 2 then
     begin
          ATech_SuperStim = 3;
          ArtResearchList = ArtResearchList diff 5;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;
     if ATech_SPBomb = 2 then
     begin
          ATech_SPBomb = 3;
          ArtResearchList = ArtResearchList diff 6;
          ArtResearchCount = ArtResearchCount - 1;
          PrepareResearch(0);
     end;

     if ArtResearchCount = 0 then
        ChangeMissionObjectives('arttech2');

end;

every 0$1 trigger 3 in [ATech_SibPlant, ATech_Beh, ATech_TimeLapse, ATech_Laser, ATech_SuperStim, ATech_SPBomb] do
begin
     Query('art_tech_general');
     ArtInfo = 1;
end;

On ResearchStarted(res,lab) do
begin
     if lab = SibLab then
        PrepareResearch(0);             //reset the research altogether, the player will just have to reload the artifact to set it again
end;


every 0$1 trigger AllianceDestroyed = 0 do
var temp;
begin
     Randomize;
     SetArtifactRes(7,true);
     SetTech(tech_artifact,7,state_enabled);

     if IsIdle(All_lab1) then
     begin
          wait(rand(0$5,0$20));

          if Rand(1,2) = 1 then
             SetSpecResearch(All_lab1,100,true)
          else
              Comresearch(All_lab1, tech_artifact);
     end;

enable;
end;
 
every 0$1 trigger AllianceDestroyed do
begin
     DialogueOn;

     if Gossudarov then
        ForceSay(Gossudarov, 'All_Gossudarov')
     else ForceSay(Roth, 'All_Roth');

     Say(Heike, 'All_Heike');

     DialogueOff;

     ChangeMissionObjectives('Main_goals_intro4');
end;

every 0$1 trigger SeeArea(2, AllArtifact) > 0 do
var i, un, temp;
begin
     temp = 99;
     for i in FilterAllUnits([[f_side,2],[f_or,[f_class,class_soldier],[f_class,class_mortar],[f_class,class_mechanic],[f_class,class_engineer],[f_class,class_scientistic]]]) diff [Heike,Omar,Gensher, Olaf,Oswald,Ralph,Kowalski,Evelyn,Swansson,Dwayne,Snake] do
         if GetDistUnitXY(i, 13, 9) < temp then
         begin
              un = i;
              temp = GetDistUnitXY(i, 13, 9);
         end;

     case un of
          Makise: Say(Makise, 'AllArt_makise');
          Sonya: Say(Sonya, 'AllArt_Sonya');
          Khattam: Say(Khattam ,'AllArt_Khattam');
          Aviradze: Say(Aviradze ,'AllArt_Aviradze');
          else
              if GetSex(un) = sex_male then
                 Say(un, 'AllArt_SomeM')
              else
                  Say(un, 'AllArt_SomeF');
     end;

     Say(Heike, 'AllArt_Heike');
end;

every 0$5 trigger EnableMovingToNextMap do
var i, temp, val, count;
begin
     temp = [];

     for i in FilterAllUnits([[f_side,2],[f_type,unit_human],[f_placed]]) do
         if IsInUnit(i) then
            temp = temp ^ IsInUnit(i)
         else
             temp = temp ^ i;

     for i in temp do
         if GetType(i) = unit_building or not IsInArea(i, ExitArea) then
            val = 1;

     for i in temp do
         if GetClass(i) = class_scientistic or GetClass( IsDrivenBy(i) ) = class_scientistic then
            count = count + 1;


     if val = 0 then
        if count < [1,2,3][difficulty] then
        begin
             case difficulty of
                  1: Query('sci_min_easy');
                  2: Query('sci_min_medium');
                  3: Query('sci_min_hard');
             end;
        end
           else
               case query('begin_assault') of
                    1: EndMission;
               end;

enable;
end;

