//intro
every 0$1 marked 3 do
var temp,temp_list;
begin
     Randomize;

     IngameOn;
     ExclusiveOff;

     centeronunits(heike);

     Say(Heike,'Rs_He1');

     changesidefog(5,2);
     Centeronunits(Gensher);

     Say(Gensher,'Rs_Ge1');
     case getsex(UPFPeople[5]) of
          sex_male: Say(UPFPeople[5],'Rs_SomeM1');
          sex_female: Say(UPFPeople[5],'Rs_SomeF1');
     end;
     Say(Gensher,'Rs_Ge2');

     wait(0$5);
     temp_list=PlayerPeople diff Heike;
     temp=temp_list[rand(1,temp_list)];

     if not temp[1] in [Olaf,Sonya,Oswald,Ralph,Kowalski,Aviradze,Swansson,Dwayne,Khattam,Evelyn,Makise] then
        if getsex(temp[1])=sex_male then
           Say(temp[1],'Rs_SomeM2')
         else
            Say(temp[1],'Rs_SomeF2');

     case temp[1] of
          Olaf:     Say(temp[1],'Rs_Olaf1');
          Sonya:    Say(temp[1],'Rs_So1');
          Oswald:   Say(temp[1],'Rs_Os1');
          Ralph:    Say(temp[1],'Rs_Ra1');
          Kowalski: Say(temp[1],'Rs_Ko1');
          Khattam:  Say(temp[1],'Rs_Kh1');
          Aviradze: Say(temp[1],'Rs_Av1');
          Evelyn:   Say(temp[1],'Rs_Ev1');
          Swansson: Say(temp[1],'Rs_Sw1');
          Dwayne:   Say(temp[1],'Rs_Dw1');
          Makise:   Say(temp[1],'Rs_Ma1');
     end;

     placeseeing(51,31,2,10);
     centeronunits(Farmervehicle);

     wait(0$3);

     temp=temp_list[rand(1,temp_list)];

     if not temp[1] in [Olaf,Sonya,Oswald,Ralph,Kowalski,Aviradze,Swansson,Dwayne,Khattam,Evelyn,Makise] then
        if getsex(temp[1])=sex_male then
           Say(temp[1],'Rs_SomeM3')
        else
            Say(temp[1],'Rs_SomeF3');

     case temp[1] of
          Olaf:     Say(temp[1],'Rs_Olaf2');
          Sonya:    Say(temp[1],'Rs_So2');
          Oswald:   Say(temp[1],'Rs_Os2');
          Ralph:    Say(temp[1],'Rs_Ra2');
          Kowalski: Say(temp[1],'Rs_Ko2');
          Khattam:  Say(temp[1],'Rs_Kh2');
          Aviradze: Say(temp[1],'Rs_Av2');
          Evelyn:   Say(temp[1],'Rs_Ev2');
          Swansson: Say(temp[1],'Rs_Sw2');
          Dwayne:   Say(temp[1],'Rs_Dw2');
          Makise:   Say(temp[1],'Rs_Ma2');
     end;

     Say(Heike,'Rs_He2');

     centeronunits(isinunit(heike));
     removeseeing(51,31,2);
     wait(0$2);

     InGameOff;
     ChangeMissionObjectives('rescue1');

     //query('secondrestart');
     Saveforquickrestart;

     enable(2);
end;                 


//Snake appears when Heike engages Farmer
every 0$1 marked 2 do
var i,temp;
begin
     repeat
           wait(0$1);

     until ContactTime([2,8]) < 0$2;

     wait(0$10);

     FightingStarted=tick;

     Say(Farmer,'Rs_Fa1');
     Say(Heike,'Rs_He3');

     ChangeMissionObjectives('rescue2');

     if LoadVariable('Transport_Teleported_14_cont',0)<1 and testing=false then
        exit;

     temp=tick;

     repeat
           wait(0$1);
     until (unitfilter(FarmerTroops,[f_ok])<17 and tick>temp+0$10 ) or (not isinunit(farmer) or isinunit(farmer)=emptyveh);

     placeunitarea(Pierre,enter_snake,false);
     placeunitarea(Elizabeth,enter_snake,false);
     placeunitarea(Snake,enter_snake,false);

     centeronunits(Snake);

     Say(Snake,'Rs_Sn1');
     Say(Heike,'Rs_He4');
     Say(Snake,'Rs_Sn2');
end;


Every 0$1.1 do
     begin
          repeat
          wait(0$0.1);

          if GetLives(Farmer) <= 250 then
               begin
                    DialogueOn;
                    ForceSay(Farmer,'Rs_Fa2');
                    DialogueOff;
                    exit;
               end;

          until false;
     end;


//Controling Farmer actions
every 0$1 marked 2 do
var i, temp, time;
begin
repeat
      wait(0$1);

     case BombStatus of
          0: if (tick > FightingStarted + 0$25 and not FightingStarted = 0) or UnitFilter(AmbushBombs, [[f_not,[f_ok]]]) > 0 then
             begin
                  BombStatus = 1;
                  temp = tick;

                  for i in AmbushBombs do
                      LinkVehicleToHuman(i,FarmerRemoteMech);

                  commovexy(AmbushBombs,51,44);
             end;

          1: begin
                  for i in Filterallunits([f_side,2]) do
                      if attacks(i) in AmbushBombs then
                         BombStatus = 3;

                  if tick > temp + 0$10 then
                     BombStatus = 2;
             end;

          2: begin
                  for i in Filterallunits([f_side,2]) do
                      if attacks(i) in AmbushBombs then
                         BombStatus = 3;

                  temp = 0;

                  for i in Filterallunits([f_side,2]) diff Snake^Pierre^Elizabeth do
                      if Attacks(i) in farmertroops then
                         temp = 1;

                  if temp = 1 then
                     ContactCount = ContactCount + 1
                  else
                      ContactCount = 0;

                  if ContactCount >= 4 then
                     BombStatus = 3;
             end;

          3: for i in AmbushBombs do
                 comattackunit(i,NearestUnitToUnit(Filterallunits([f_side,2]) diff Snake^Elizabeth^Pierre,i));
     end;

until false;
end;


every 0$1 marked 2 do
var i,temp,temp2;
begin
     if FarmerStatus < 2 then
        for i in FarmerBombs do
            if GetLives(i) < 800 then
               temp = 1;
     temp2 = IsInUnit(Heike);
     if temp2 = 0 then
        temp2 = Heike;

     if temp = 1 then
     begin
          for i in FarmerBombs do
              if not IsControledBy(i) then
                 LinkVehicleToHuman(i,FarmerRemoteMech);

        if GetDistUnits( NearestUnitToUnit(FarmerBombs, temp2), temp2) < 35 then
           ComAttackUnit(FarmerBombs, temp2)
        else
            for i in FarmerBombs do
                ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_side,2]) diff Snake^Pierre^Elizabeth, i) );
     end;

     case FarmerStatus of
          0: if not IsOk(FarmerVehicle) then
                if IsInUnit(Farmer) then
                   FarmerStatus = 1
                else
                    if IsOk(emptyveh) and GetSide(emptyveh) = 8 then
                       ComEnterUnit(Farmer, emptyveh);

          1: begin
                  for i in FarmerBombs do
                      if not IsControledBy(i) then
                         LinkVehicleToHuman(i,FarmerRemoteMech);

                  comattackunit(Farmer^FarmerBombs,Heike);
             end;
     end;

enable;
end;


every 0$1 marked 2 do
var i;
begin
     for i in FarmerTroops^AmbushBombs do
         if not isok(i) and getcontrol(i)=control_remote then
            comunlink(i);

enable;
end;

every 0$1 trigger EndingCutscene do
begin
     ComMoveXY(FarmerTroops, 70, 2);
end;


//Spawning Legion attacks on Gensher
every 0$1 marked 1 do
var i,temp,temp2,count,controlmechs;
begin
     Randomize;

     uc_side=8;
     uc_nation=nation_arabian;

     Legion=[];
     controlmechs=[];

     for i=1 to 3 do
     begin
          preparemechanic(false,10);
          controlmechs=controlmechs^createhuman;
     end;

     LegionRemoteMech=controlmechs;

     vc_chassis=ar_half_tracked;
     vc_engine=engine_siberite;
     vc_control=control_manual;
     vc_weapon=ar_control_tower;
     temp=createvehicle^createvehicle^createvehicle;
     for i=1 to 3 do
         placehumaninunit(controlmechs[i],temp[i]);

     for i in temp do
         placeunitarea(i,LegionAttackNormal,false);

     repeat
           if EndingCutscene then
              exit;

           while Legion<15 do
           begin
                if rand(1,3)=1 then
                begin
                     hc_gallery='';
                     hc_name='';
                     PrepareSoldier(false,10);
                     temp=createhuman;

                     if rand(1,3)=1 then
                        LegionNoRetreat=LegionNoRetreat^temp;

                     if rand(1,2)=1 then
                        setclass(temp,class_mortar);

                     setattr(temp,attr_speed,12);
                     setattr(temp,attr_stamina,12);
                     placeunitarea(temp,legionattacknormal,false);
                     settag(temp,rand(1,3));
                     Legion=Legion^temp;
                end
                else

                begin
                     vc_engine=[engine_siberite,engine_combustion][rand(1,2)];
                     vc_control=[control_manual,control_remote,control_apeman][rand(1,3)];
                     vc_chassis=[ar_half_tracked,ar_half_tracked,ar_medium_trike][rand(1,3)];
                     if unitfilter(legion,[f_weapon,ar_rocket_launcher])<3 then
                        vc_weapon=[ar_gun,ar_gun,ar_gun,ar_rocket_launcher,ar_rocket_launcher,ar_rocket_launcher,ar_gatling_gun,ar_gatling_gun,ar_flame_thrower][rand(1,9)]
                     else
                         vc_weapon=[ar_gun,ar_gun,ar_gun,ar_gatling_gun,ar_gatling_gun,ar_flame_thrower][rand(1,5)];

                     temp=createvehicle;
                     placeunitarea(temp,legionattacknormal,false);

                     if getcontrol(temp)=control_remote then
                     begin
                          count=11;
                          temp2=controlmechs[1];
                          for i in controlmechs do
                              if unitslinked(i)<count then
                              begin
                                   count=unitslinked(i);
                                   temp2=i;
                              end;

                          linkvehicletohuman(temp,temp2);
                          settag(temp,rand(1,3));
                          Legion=Legion^temp;
                     end;

                     if getcontrol(temp)=control_manual then
                     begin
                          preparemechanic(false,10);
                          temp2=createhuman;

                          if rand(1,3)=1 then
                             LegionNoRetreat=LegionNoRetreat^temp2;

                          placehumaninunit(temp2,temp);
                          settag(temp2,rand(1,3));
                          Legion=Legion^temp2;
                     end;

                     if getcontrol(temp)=control_apeman then
                     begin
                          settag(temp,rand(1,3));
                          Legion=Legion^temp;
                     end;
                end;
           end;


           wait(0$45);

     until missionfailed or EndingCutscene;

end;


//Controling Legion attacks
every 0$1 trigger Legion>0 do
var i,temp;
begin
     for i in Legion do
     begin
          if getweapon(i)=ar_rocket_launcher or getclass(i)=class_mortar then
          begin
               if unitfilter(Legion,[f_or,[f_weapon,ar_rocket_launcher],[f_class,class_mortar]])=Legion and getdistunitxy(i,[57,65,73][gettag(i)],95)>9 then
                  commovexy(i,[62,70,78][gettag(i)],105)
               else
                   comattackunit(i,(UPFVehicles[3]^UPFVehicles[4]^UPFVehicles[5])[gettag(i)]);
          end
          else
              comagressivemove(i,[57,65,73][gettag(i)],95);


          if getlives(i)<500 then
             if gettype(i)=unit_human and not i in LegionNoRetreat then
             begin
                  LegionRetreating=LegionRetreating^i;
                  DoNotAttack(5,i);
                  Legion=Legion diff i;
             end;

          if getclass(i)=class_mechanic and not isinunit(i) then
          begin
               LegionRetreating=LegionRetreating^i;
               DoNotAttack(5,i);
               Legion=Legion diff i;
          end;

          if not isok(i) then
             Legion=Legion diff i;
     end;

enable;
end;


every 0$1 trigger LegionRetreating>0 do
var i;
begin
     for i in LegionRetreating do
     begin
          commovexy(i,83,132);
          if getdistunitxy(i,83,132)<5 then
             removeunit(i);

          if getlives(i)<500 and getlives(i)>300 then
             setlives(i,490);
     end;

enable;
end;

//Keeiping player out of UPF space
On Command(com) do
var i,j;
begin
     for i in FilterAllUnits([f_side,2]) do
         if HasTask(i) then
            for j=1 to GetTaskList(i) do
                if InArea(GetTaskList(i)[j][2],GetTaskList(i)[j][3],playerinaccessible) or GetSide(GetTaskList(i)[j][4])=5 then
                   SetTaskList(i,[]);

end;


//Maintaining UPF
every 1 marked 1 do
var i, j, temp;
begin
     for i in UPFPeople^UPFVehicles^Gensher diff UPFRetUnits do
         if getlives(i) < 700 then
         begin
              if i in UPFRetreat then
              begin
                   for j = 1 to UPFRetreat do
                       if UPFRetreat[j] = i then
                          break;

                   if UPFCount[j] < 2 then
                      UPFCount = Replace(UPFCount,j, UPFCount[j] + 1)
                   else
                       begin
                            UPFRetUnits = UPFRetUnits ^ i;
                            ComMoveXY(i, UPFRetHexes[j][1], UPFRetHexes[j][2]);

                            break;
                       end;
              end;

              if i in UPFRetreat then
                 temp = 999
              else
                  temp = 700;

              if not i in UPFRetUnits then
                 setlives(i,temp);
         end;

     if missionfailed then
        exit;
enable;                                                                                    
end;           

every 0$1 do
var i;
begin
     if missionfailed then
        exit;

     for i in filterallunits([[f_side,5],[f_class,class_mortar]]) ^ Gensher diff UPFRetUnits do
         if hastask(i)=0 and not getdir(i) in [2,3] then
         begin
              comturnxy(i,[60,77][rand(1,2)],103);
              addcomhold(i);
         end;

     if UPFRetUnits = 0 then
        if GetDistUnitXY(UPFRepairMech,51,79) > 1 then
           ComMoveXY(UPFRepairMech,51,79)
        else
            ComHold(UPFRepairMech);

enable;
end;

every 0$1 trigger UPFRetUnits > 0 do
var i, hex, temp;
begin
     for i = 1 to UPFretreat do
         if UPFretreat[i] in UPFRetUnits then
            if GetLives(UPFretreat[i]) < 1000 then
            begin
                 if GetDistUnitXY(UPFretreat[i], UPFRetHexes[i][1], UPFRetHexes[i][2]) > 0 then
                    ComMoveXY(UPFretreat[i], UPFRetHexes[i][1], UPFRetHexes[i][2])
            end
            else
                begin
                     hex = [[53,91], [57,89], [59,88], [66,87], [68,90]][i];

                     if GetDistUnitXY(UPFretreat[i], hex[1], hex[2]) > 0 then
                     begin
                          ComMoveXY(UPFretreat[i], hex[1], hex[2]);
                          AddComHold(UPFretreat[i]);
                     end
                     else
                         begin
                              UPFRetUnits = UPFRetUnits diff UPFretreat[i];
                              UPFCount = Replace(UPFCount,i, 0);
                         end;
                end;

     temp = UnitFilter(UPFRetUnits, [f_type,unit_vehicle]);

     if temp > 0 then
        for i = 1 to UPFretreat do
            if UPFretreat[i] = temp[1] then
            begin
                 if GetDistUnitXY(UPFretreat[i], UPFRetHexes[i][1], UPFRetHexes[i][2]) < 2 then
                    ComRepairVehicle(UPFRepairMech, UPFretreat[i])
                 else
                     ComHold(UPFRepairMech);

                 break;
            end;

     for i in UPFRetUnits do
         if GetLives(i) < 600 then
            SetLives(i,600);

enable;
end;


//Time limit
every 0$1 marked 2 do
var i,time;
begin
     if testing then
        time=5$0
     else
         time=loadvariable('extra_time_14_cont',0) + 3$0;

     if time>8$0 then
        time=8$0;

     repeat
           wait(0$1);
           time=time-0$1;

           if testing=true then
              display_strings=['#Ar14-FinalCountdown',time];

           if missionfailed or EndingCutscene then
              exit;
     until time<1;

     MissionFailed=1;
end;


//When time runs out
every 0$1 trigger missionfailed do
var i,j,LegionEnd,Bombs,temp,count,gline;
begin
     disable(1);
     LegionEnd= UnitFilter(Legion,[f_not,[f_type,unit_human]]);
     Legion=[];
     Bombs=[];

     uc_side=8;
     uc_nation=nation_arabian;

     InGameOn;
     centeronxy(66,95);

     wait(0$3);
     Say(Heike,'Rs_He11');

     while Islive(Gensher) do
     begin
          wait(0$0.2);

          for i = LegionEnd downto 1 do
              if GetLives(LegionEnd[i]) < 250 then
                 LegionEnd = Delete(LegionEnd, i);

          if unitfilter(bombs,[f_ok])< 3 then
          begin
               vc_weapon=ar_selfpropelled_bomb;
               vc_chassis=ar_half_tracked;
               vc_engine=engine_siberite;
               vc_control=control_remote;

               Bombs=Bombs^Createvehicle;

               for i in unitfilter(bombs,[ [f_lives,900],[f_not,[f_placed]] ]) do
               begin
                    placeunitarea(i,legionattacknormal,false);

                    count=11;
                    for j in LegionRemoteMech do
                        if unitslinked(j)<count then
                        begin
                             count=unitslinked(j);
                             temp=j;
                        end;
                    linkvehicletohuman(i,temp);
               end;
          end;

          if unitfilter(LegionEnd,[f_ok])< 3 then 
          begin
               vc_weapon=[ar_gun,ar_rocket_launcher,ar_gatling_gun][rand(1,3)];;
               vc_chassis=ar_half_tracked;
               vc_engine=engine_siberite;
               vc_control=control_remote;

               LegionEnd=LegionEnd^Createvehicle;

               for i in unitfilter(LegionEnd,[[f_lives,900],[f_not,[f_placed]]]) do
               begin
                    placeunitarea(i,legionattacknormal,false);

                    count=11;
                    for j in LegionRemoteMech do
                        if unitslinked(j)<count then
                        begin
                             count=unitslinked(j);
                             temp=j;
                        end;
                    linkvehicletohuman(i,temp);
               end;
          end;


          for i in Bombs^LegionEnd do
              comattackunit(i, nearestunittounit(filterallunits([f_side,5]),i) );

          if getlives(Gensher)<800 and gline=0 then
          begin
               Say(Gensher,'Rs_Ge10');
               gline=1;
          end;           
     end;

     wait(0$5);
     youlost('Gensherdead');
end;

every 0$1 trigger isdead(heike) marked 2 do
youlost('HeikeDead');


