Export Heike, dep, engi, testing, Abdul;


Starting
begin
     ResetFog;
     RandomizeAll;

     testing = false;  //Just testing or playing for real?
     dep = 0;
     engi = 0;

     ChangeSideFog(5,2);

     Disable(1);

     PlaceUnits;
     Action;
end;

Function PlaceUnits;
     var b_list, val, temp_unit, temp_list, un, un2, base;
     begin
          //Create and place the buildings the player built in the last mission + fill in people
          b_list = LoadVariable('Buildings_04',[]);  //[btype,x,y,dir,labext1,labext2,bweapon,main_depot_boolean]
          if b_list = 0 then
               b_list = [[b_breastwork,88,9,2,0,0,0,0],[b_ext_gun,101,13,3,0,0,0,0],[b_lab_half,95,6,2,b_lab_weapon,b_lab_basic,0,0],[b_factory,101,17,1,0,0,0,0],[b_oil_mine,114,8,1,0,0,0,0],[b_depot,107,9,3,0,0,0,1],[b_bunker,110,21,0,0,0,ar_gatling_gun,0],[b_oil_power,116,17,4,0,0,0,0],
                         [b_depot,82,32,1,0,0,0,0],[b_factory,75,40,1,0,0,0,0],[b_ext_radar,79,44,5,0,0,0,0],  //Non-main Arab base
                         [b_depot,126,94,1,0,0,0,0],[b_factory,117,86,5,0,0,0,0],  //Near Russian base
                         [b_depot,38,46,0,0,0,0,0],[b_factory,52,57,2,0,0,0,0]];  //Near American base

          //Ignore buildings near the former American and Russian bases.
          temp_list = [];
          for val in b_list do
               begin
                    if InArea(val[2],val[3],near_am_base_area) or InArea(val[2],val[3],near_ru_base_area) then
                         continue;  //Ignore this building

                    temp_list = temp_list ^ [val];
               end;

          b_list = temp_list;

          //Add a depot just somewhere if there are none, just to make the cutscene work.
          val = false;
          for un in b_list do
               if un[1] in [b_depot,b_warehouse] then
                    begin
                         val = true;
                         break;
                    end;

          if not val then
               b_list = b_list ^ [[b_depot,66,29,2,0,0,0,1]];

          //Depots first.
          //Factory extensions must go AFTER the factory.
          temp_list = [];
          for val in b_list do
               begin
                    case val[1] of
                         b_depot, b_warehouse: temp_list = temp_list ^ 2;
                         b_ext_computer,b_ext_gun,b_ext_laser,b_ext_noncombat,b_ext_radar,b_ext_radio,b_ext_rocket,b_ext_siberium,b_ext_stitch,b_ext_track: temp_list = temp_list ^ 0;
                         else temp_list = temp_list ^ 1;
                    end;
               end;

          b_list = SortListByListDesc(b_list,temp_list);

          InitUc;
          InitBc;
          uc_side = 2;
          uc_nation = nation_arabian;  //Assuming all buildings are Arabian - should be the case

          for val in b_list do
               begin
                    bc_type = val[1];
                    uc_direction = val[4];

                    case val[1] of
                         b_depot,b_warehouse: begin

                              un = CreateBuilding;
                              PlaceUnitXY(un,val[2],val[3],false);

                              PrepareEngineer(false,0);
                              un2 = CreateHuman;
                              PlaceHumanInUnit(un2,un);

                              if val[8] then
                                   begin
                                        dep = un;
                                        engi = un2;
                                        SetBName(dep,'newnish');
                                   end;
                         end;
                         b_workshop,b_factory,b_lab,b_lab_half,b_lab_full,b_armoury,b_barracks,b_breastwork,b_bunker: begin

                              if val[1] in [b_lab,b_lab_half,b_lab_full] then
                                   begin
                                        bc_kind1 = val[5];
                                        bc_kind2 = val[6];
                                   end;

                              temp_unit = CreateBuilding;
                              PlaceUnitXY(temp_unit,val[2],val[3],false);

                              case val[1] of
                                   b_workshop,b_factory: begin
                                        PrepareMechanic(false,0);
                                        //SetSpecResearch(temp_unit,100,false); -> looks silly no factory extensions work
                                   end;
                                   b_lab,b_lab_half,b_lab_full: begin
                                        PrepareScientist(false,0);
                                        //SetSpecResearch(temp_unit,100,false); -> takes too much power
                                   end;
                                   b_breastwork: begin
                                        uc_direction = InvertDir(val[4]);  //To make people in breastworks face properly
                                        PrepareSoldier(false,0);
                                   end;
                                   b_bunker: begin
                                        PlaceWeaponTurret(temp_unit,val[7]);
                                        PrepareSoldier(false,0);
                                   end;
                              end;

                              PlaceHumanInUnit(CreateHuman,temp_unit);
                         end;
                         b_oil_mine: begin
                              SetResourceVisibility(val[2],val[3],2);
                              CreateAndPlaceBuildingXYD(val[2],val[3],val[4]);
                         end;
                         else
                              CreateAndPlaceBuildingXYD(val[2],val[3],val[4]);
                    end;
               end;

          //Remove buildings not connected to the main depot.
          //Detection of base affiliation can screw up if buildings are destroyed
          //so detect first, then destroy.
          if dep = 0 then
               begin
                    temp_list = FilterAllUnits([[f_side,2],[f_or,[f_btype,b_depot],[f_btype,b_warehouse]]]);
                    if temp_list > 0 then
                         dep = temp_list[1];
               end;

          base = GetBase(dep);
          temp_list = [];
          for val in FilterAllUnits([[f_side,2],[f_type,unit_building]]) do
               if GetBase(val) <> base then
                    temp_list = temp_list ^ val;

          for val in temp_list do
               begin
                    for un in UnitsInside(val) do
                         DestroyUnit(un);

                    DestroyUnit(val);
               end;

          //Create Heike and Abdul and place them near the depot.
          if testing then
               begin
                    preparesoldier(sex_female,0);
                    hc_name = 'Heike';
                    Heike = CreateHuman;
               end
          else
               begin
                    Heike = CreateCharacter('Heike_04');
                    SetClass(Heike,class_soldier);
               end;

          Abdul = NewCharacter('Abdul');

          PlaceUnitXYR(Abdul, ShiftX(GetX(dep),GetDir(dep),5) , ShiftY(GetY(dep),GetDir(dep),5) ,5,false);

          temp_list = [GetX(Abdul),GetY(Abdul)];
          for val = 0 to 5 do
               if PlaceUnitXY(Heike,ShiftX(temp_list[1],val,2),ShiftY(temp_list[2],val,2),false) then
                    break;
          if val = 6 then  //Couldn't be placed above
               if not PlaceUnitXYR(Heike,GetX(Abdul),GetY(Abdul),2,false) then
                    PlaceUnitAnywhere(Heike,false);

          ComTurnUnit(Heike,Abdul);
          ComTurnUnit(Abdul,Heike);
          AddComStand([Heike,Abdul]);
     end;
Function InvertDir(dir);
     begin
          result = dir - 3;
          if result < 0 then
               result = result + 6;
     end;

Function Action;
     var Sonya, Oswald, Ralph, Kowalski, Willard, Evelyn, units_list, un, un_list, name_list, temp_list;
     var sel_list, others_list;
     begin
          InGameOn;
          ExclusiveOff;
          
          CenterNowOnXY(60,114);  //Center somewhere in the darkness

          wait(2);  //wait for center
          repeat
          Query('QCutsceneInfo1');
          un = Query('QCutsceneInfo2');
          until un = 2;

          ClearAllFogForSide(2);

          //Order engineers to start building
          ComBuild(e1,b_depot,156,100,3);
          ComBuild(e2,b_lab,26,23,5);

          Wait(0$1.5);
          CenterOnXY(20,16);  //Center former American base
          Wait(0$3.5);
          CenterOnXY(150,104);  //Center former Russian base
          Wait(0$3.5);
          CenterOnXY(GetX(Heike),GetY(Heike));  //Center Arab base (Heike)
          wait(0$1.5);
          
          //Stop building so the player won't get a "Building complete" message
          for un in FilterAllUnits([f_side,5]) do
               RemoveUnit(un);

          enable(1);

          Say(Heike,'D1H1');
          Say(Abdul,'D1Ab1');
          Say(Heike,'D1H2');

          if not LoadVariable('low_casualties_04',true) then
               begin
                    Say(Heike,'D1H3a');
                    Say(Abdul,'D1Ab2a');
               end;

          Say(Abdul,'D1Ab3');
          Say(Abdul,'D1Ab4');
          Say(Heike,'D1H4');
          Say(Abdul,'D1Ab5');
          Say(Heike,'D1H5');
          Say(Abdul,'D1Ab6');
          Say(Abdul,'D1Ab7');
          Say(Heike,'D1H6');
          Say(Abdul,'D1Ab8');
          Say(Heike,'D1H7');
          Say(Abdul,'D1Ab9');

          if GetDistUnits(Heike,Abdul) <= 3 then
               begin
                    ComMoveXY(Heike,ShiftX(GetX(Abdul),GetDir(Abdul),1),ShiftY(GetY(Abdul),GetDir(Abdul),1));

                    un = 0;
                    repeat
                         wait(0$0.2);
                         un = un + 1;  //safety
                    until GetDistUnits(Heike,Abdul) = 1 or un > 15;

                    ComStand(Heike);
               end;
          Say(Heike,'D1H8');

          Wait(0$0.2);

          //Load characters from last mission
          Sonya = CreateCharacter('Sonya_04');
          Oswald = CreateCharacter('Oswald_04');
          Ralph = CreateCharacter('Ralph_04');
          Kowalski = CreateCharacter('Kowalski_04');
          Willard = CreateCharacter('Willard_04');
          Evelyn = CreateCharacter('Evelyn_04');
          others_list = CreateCharacterSet('Others_04') diff 0;
          others_list = others_list ^ NewCharacter('Jeschke');
          units_list = ([Sonya,Oswald,Ralph,Kowalski,Willard,Evelyn] diff 0) ^ others_list;

          //Create extra units if there are less than 7.
          InitUc;
          InitHc;
          uc_nation = nation_arabian;
          uc_side = 2;
          while units_list < 7 do
               begin
                    PrepareHuman(false,[class_soldier,class_engineer,class_mechanic,class_scientistic][Rand(1,4)],3);
                    un = CreateHuman;
                    units_list = units_list ^ un;
                    others_list = others_list ^ un;
               end;

          sel_list = CharacterSelection('',5,5,[sel_change_class,sel_hired,sel_not_changeable,Heike,sel_not_hired,sel_changeable] ^ units_list,[class_soldier,class_engineer,class_mechanic,class_scientistic]);

          SaveCharacters(Heike,'Heike_05_sel');

          un_list = [Sonya,Oswald,Ralph,Kowalski,Willard,Evelyn];
          name_list = ['Sonya','Oswald','Ralph','Kowalski','Willard','Evelyn'];
          for un = 1 to un_list do
               if un_list[un] in sel_list then
                    SaveCharacters(un_list[un],name_list[un] & '_05_sel');

          SaveCharacters(sel_list diff (un_list ^ Heike),'Others_05_sel');
          temp_list = others_list diff sel_list;
          SetLastMission(temp_list,4);  //for correct xp bonus later on
          SaveCharacters(temp_list,'Others_05_not_sel');

          ChangeMap('%_cont','%_cont');

          InGameOff;
     end;
//Little event - engineer collects some crates
Every 0$1 marked 1 do
     var hex, x, y;
     begin
          x = ShiftX(GetX(dep),5,8);
          if x < 0 then
               x = 0;

          y = ShiftY(GetY(dep),5,8);
          if y < 0 then
               y = 0;

          MoveAreaXY(moveable_crate_area,x,y);

          CreateCratesArea(4,moveable_crate_area,true);
          Wait(0$17);  //wait for spawn

          hex = GetListOfCratesInArea(moveable_crate_area);

          ComExitBuilding(engi);
          wait(0$0.5);
          ComCollect(engi,hex[1],hex[2]);

          repeat
          wait(0$1);
          until not Carry(engi) and GetResourceAmountXY(hex[1],hex[2]) = 0;

          ComEnterUnit(engi,dep);
     end;